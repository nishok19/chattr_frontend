[{"/home/nishok/MY/projects/college_project/chatapp_frontend/src/index.js":"1","/home/nishok/MY/projects/college_project/chatapp_frontend/src/App.js":"2","/home/nishok/MY/projects/college_project/chatapp_frontend/src/reportWebVitals.js":"3","/home/nishok/MY/projects/college_project/chatapp_frontend/src/reducer.js":"4","/home/nishok/MY/projects/college_project/chatapp_frontend/src/StateProvider.js":"5","/home/nishok/MY/projects/college_project/chatapp_frontend/src/firebase.js":"6","/home/nishok/MY/projects/college_project/chatapp_frontend/src/axios.js":"7","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Singup/Signup.js":"8","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Home/Home.js":"9","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Login/Login.js":"10","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Sidebar/Sidebar.js":"11","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Chat/Chat.js":"12","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/SidebarChat/SidebarChat.js":"13","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Detailsbar/Detailsbar.js":"14","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Sidebar/GroupModal/GroupModal.js":"15","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Detailsbar/Modal/UserModal.js":"16","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Sidebar/ProfileModal/ProfileModal.js":"17"},{"size":688,"mtime":1610264045074,"results":"18","hashOfConfig":"19"},{"size":4295,"mtime":1613811874712,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610264045690,"results":"21","hashOfConfig":"19"},{"size":3897,"mtime":1613757706548,"results":"22","hashOfConfig":"19"},{"size":364,"mtime":1610264046410,"results":"23","hashOfConfig":"19"},{"size":1381,"mtime":1611257746183,"results":"24","hashOfConfig":"19"},{"size":126,"mtime":1610360232186,"results":"25","hashOfConfig":"19"},{"size":6074,"mtime":1611938692486,"results":"26","hashOfConfig":"19"},{"size":289,"mtime":1613062496121,"results":"27","hashOfConfig":"19"},{"size":7747,"mtime":1613809422154,"results":"28","hashOfConfig":"19"},{"size":5914,"mtime":1613219065073,"results":"29","hashOfConfig":"19"},{"size":7862,"mtime":1613747875106,"results":"30","hashOfConfig":"19"},{"size":1857,"mtime":1612614655761,"results":"31","hashOfConfig":"19"},{"size":3521,"mtime":1613895862461,"results":"32","hashOfConfig":"19"},{"size":1909,"mtime":1612275117471,"results":"33","hashOfConfig":"19"},{"size":1932,"mtime":1612270462914,"results":"34","hashOfConfig":"19"},{"size":4967,"mtime":1612855525665,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"rvwv45",{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"38"},"/home/nishok/MY/projects/college_project/chatapp_frontend/src/index.js",[],["81","82"],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/App.js",["83","84","85","86","87"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n} from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Detailsbar from \"./components/Detailsbar/Detailsbar\";\nimport Chat from \"./components/Chat/Chat\";\nimport Home from \"./components/Home/Home\";\nimport Signup from \"./components/Singup/Signup\";\nimport Pusher from \"pusher-js\";\nimport axios from \"./axios\";\n\nimport { actionTypes } from \"./reducer\";\nimport { useStateValue } from \"./StateProvider\";\n// import { auth, provider } from \"./firebase\";\n\nconst App = () => {\n  const [{ user, room, jwt }, dispatch] = useStateValue();\n  const [err, setErr] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"chattrJWT\");\n    if (token) {\n      const accessToken = `Bearer ${token}`;\n      dispatch({\n        type: actionTypes.SET_JWT,\n        accessToken,\n      });\n      getUserWithJWT(accessToken);\n      // history.push(\"/rooms\");\n      // console.log(jwt);\n    }\n  }, []);\n\n  const getUserWithJWT = async (accessToken) => {\n    try {\n      await axios\n        .get(\"/auth/login\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: accessToken,\n          },\n        })\n        .then((res) => {\n          console.log(res);\n          const userData = res.data;\n          if (userData.userExists) {\n            // Executing only if the server sends that the {userExists:true}\n            // setError(\"\");\n            dispatch({\n              type: actionTypes.SET_USER,\n              user: res.data.user,\n            });\n            //\n            // history.push(\"/rooms\");\n            //\n          } else if (!userData.userExists) {\n            // setError(\"user does not exists... First sign up\");\n            history.push(\"/login\");\n          } else {\n            // setError(\"Something went wrong\");\n            console.log(\"issue with logging in the user\");\n          }\n        })\n        .catch((err) => {\n          console.log(\"login\", err);\n        });\n    } catch {\n      console.log(\"problem with logging in\");\n    }\n  };\n\n  // pusher\n  useEffect(() => {\n    const pusher = new Pusher(\"ef3c3aa07c44c7f445e9\", {\n      cluster: \"ap2\",\n    });\n\n    const channelRoom = pusher.subscribe(\"rooms\");\n    channelRoom.bind(\"inserted\", (room) => {\n      // alert(JSON.stringify(data));\n      console.log(\"pusher room\", room);\n      if (room.users[0] === user?.email) {\n        dispatch({\n          type: actionTypes.INSERT_NEW_ROOM,\n          room: room,\n        });\n      }\n    });\n\n    channelRoom.bind(\"deleted\", (room) => {\n      console.log(\"pusher room deletion\", room);\n\n      dispatch({\n        type: actionTypes.DELETE_ROOM,\n        roomId: room.roomId._id,\n      });\n\n      // User pusher\n\n      // const channelUsers = pusher.subscribe(\"users\");\n      // channelUsers.bind(\"updated\", (res) => {\n      //   console.log(\"pusher user\", res);\n      //   if (res.data !== user?.email) {\n      //     dispatch({\n      //       type: actionTypes.USER_LEFT,\n      //       roomId: res.roomId,\n      //       user: res.data,\n      //     });\n      //   } else {\n      //     console.log(\"user has left and has to be removed\");\n      //   }\n      // });\n    });\n\n    return () => {\n      channelRoom.unbind_all();\n      channelRoom.unsubscribe();\n    };\n  }, [room]);\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Router>\n          <Switch>\n            <Route exact path=\"/home\" component={Home} />\n\n            <Route exact path=\"/login\" component={Login} />\n\n            <Route exact path=\"/signup\" component={Signup} />\n\n            <Route component={Home} />\n          </Switch>\n        </Router>\n      ) : (\n        <div className=\"app__body\">\n          <Router>\n            <Switch>\n              <Route path=\"/rooms\">\n                <Sidebar />\n                <Route exact path=\"/rooms/:roomId\">\n                  <Chat />\n                  <Detailsbar />\n                </Route>\n              </Route>\n              <Route component={Sidebar} />\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/reportWebVitals.js",[],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/reducer.js",["88"],"export const initialState = {\n  user: null,\n  room: [],\n  jwt: \"\",\n  people: [],\n  currentRoom: \"\",\n};\n\nexport const actionTypes = {\n  SET_USER: \"SET_USER\",\n  SET_ROOM: \"SET_ROOM\",\n  SET_MESSAGE: \"SET_MESSAGE\",\n  INSERT_NEW_ROOM: \"INSERT_NEW_ROOM\",\n  SIGNOUT_USER: \"SIGNOUT_USER\",\n  SET_JWT: \"SET_JWT\",\n  SET_PEOPLE: \"SET_PEOPLE\",\n  UPDATE_PEOPLE: \"UPDATE_PEOPLE\",\n  SET_CURRENT_ROOM: \"SET_CURRENT_ROOM\",\n  DELETE_ROOM: \"DELETE_ROOM\",\n  LEAVE_ROOM: \"LEAVE_ROOM\",\n  USER_LEFT: \"USER_LEFT\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return { ...state, user: action.user };\n\n    case actionTypes.SET_ROOM:\n      return {\n        ...state,\n        room: action.room,\n      };\n\n    case actionTypes.INSERT_NEW_ROOM:\n      const userRoomAdd = state.user;\n      userRoomAdd.rooms = state.user.rooms.concat(action.room.name);\n      return {\n        ...state,\n        room: [...state.room, action.room],\n        user: userRoomAdd,\n      };\n\n    case actionTypes.SET_MESSAGE: {\n      const stateRoom = [...state.room];\n      const roomIndex = stateRoom.filter((r) => r._id === action.roomId)[0];\n      const index = stateRoom.findIndex((room) => room._id === action.roomId);\n      const addedMsg = roomIndex.data.concat(action.msg);\n      // const actualRooms = [...state.room];\n      const uniqueMsgs = addedMsg\n        .map((e) => e[\"_id\"])\n        .map((e, i, final) => final.indexOf(e) === i && i)\n        .filter((obj) => addedMsg[obj])\n        .map((e) => addedMsg[e]);\n\n      roomIndex.data = uniqueMsgs;\n      stateRoom.splice(index, 1, roomIndex);\n      console.log(\"reducer msg\", addedMsg, roomIndex, stateRoom);\n\n      return {\n        ...state,\n        room: stateRoom,\n      };\n    }\n\n    case actionTypes.SIGNOUT_USER: {\n      return {\n        user: null,\n        room: [],\n      };\n    }\n\n    case actionTypes.SET_JWT:\n      return {\n        ...state,\n        jwt: action.accessToken,\n      };\n\n    case actionTypes.SET_PEOPLE:\n      return {\n        ...state,\n        people: action.people,\n      };\n\n    case actionTypes.SET_CURRENT_ROOM:\n      return {\n        ...state,\n        currentRoom: action.room,\n      };\n\n    case actionTypes.UPDATE_PEOPLE:\n      const actualRooms = state.room;\n      const userRoom = state.room.filter((r) => r._id === action.roomId)[0];\n      const changedUsers = userRoom.users.concat(action.people.email);\n      userRoom.users = changedUsers;\n      const index = state.room.findIndex((room) => room._id === action.roomId);\n      actualRooms.splice(index, 1, userRoom);\n      console.log(\"actualRoomsUsers\", actualRooms);\n\n      const allPeople = [...state.people, action.people];\n      const uniquePeople = allPeople\n        .map((e) => e[\"_id\"])\n        .map((e, i, final) => final.indexOf(e) === i && i)\n        .filter((obj) => allPeople[obj])\n        .map((e) => allPeople[e]);\n\n      return {\n        ...state,\n        people: uniquePeople,\n        room: actualRooms,\n      };\n\n    case actionTypes.DELETE_ROOM:\n      const rooms = state.room.filter((room) => room._id !== action.roomId);\n      return {\n        ...state,\n        room: rooms,\n      };\n\n    case actionTypes.LEAVE_ROOM:\n      const userNotLeavingRooms = state.room.filter(\n        (room) => room._id != action.roomId\n      );\n      return {\n        ...state,\n        user: action.user,\n        room: userNotLeavingRooms,\n      };\n\n    case actionTypes.USER_LEFT:\n      const stateRooms = [...state.room];\n      const roomToAlter = stateRooms.filter((r) => r._id === action.roomId)[0];\n      const indexOfAlterRoom = stateRooms.findIndex(\n        (room) => room._id === action.roomId\n      );\n      roomToAlter.users = action.users;\n      stateRooms.splice(indexOfAlterRoom, 1, roomToAlter);\n\n      return {\n        ...state,\n        room: stateRooms,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/StateProvider.js",[],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/firebase.js",[],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/axios.js",[],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Singup/Signup.js",["89","90","91","92"],"import React, { useState, useEffect } from \"react\";\nimport \"./Signup.css\";\nimport axios from \"../../axios\";\n\nimport { Button, TextField, StylesProvider } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\n\nimport { auth, provider } from \"../../firebase.js\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Signup = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPass, setConfirmPass] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  const history = useHistory();\n\n  // useEffect(() => {\n  // }, []);\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#131a08\",\n      },\n      secondary: {\n        main: green[500],\n      },\n    },\n  });\n\n  const createUser = async () => {\n    await axios\n      .post(\"/auth/signup\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        email: email,\n        name: name,\n        password: password,\n      })\n      .then((res) => {\n        const userData = res.data;\n        console.log(userData);\n        if (userData.userExists) {\n          console.log(\"user already exists\");\n          setError(\"user already exists\");\n        } else if (!userData.userExists) {\n          console.log(\"user created\");\n          setError(\"\");\n          history.push(\"/login\");\n        } else {\n          setError(\"Something went wrong\");\n          console.log(\"issue with creating the user\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const createUserWithGoogle = async (\n    uid,\n    { displayName, email, providerId, photoURL }\n  ) => {\n    await axios\n      .post(\"/auth/signup\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        name: displayName,\n        email: email,\n        photoURL: photoURL,\n        provider: {\n          providerId,\n          uid,\n        },\n      })\n      .then((res) => {\n        const userData = res.data;\n        console.log(userData);\n        if (userData.userExists) {\n          console.log(\"user already exists\");\n          setError(\"user already exists\");\n        } else if (!userData.userExists) {\n          console.log(\"user created\");\n          setError(\"\");\n          history.push(\"/login\");\n        } else {\n          setError(\"Something went wrong\");\n          console.log(\"issue with creating the user\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    if (name && email && password == confirmPass) {\n      // console.log(name, email, password, confirmPass);\n      createUser();\n    }\n  };\n\n  const confirmPassword = (e) => {\n    setConfirmPass(e.target.value);\n    password == e.target.value\n      ? setError(\"\")\n      : setError(\"Passwords does'nt matches\");\n  };\n\n  const signupGoogle = async () => {\n    await auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        console.log(result);\n        if (\n          // result.additionalUserInfo.isNewUser &&\n          result.user.emailVerified\n          // error == \"\"\n        ) {\n          setName(result.user.displayName);\n          setEmail(result.user.email);\n          setError(\"\");\n          createUserWithGoogle(result.user.uid, result.user.providerData[0]);\n          setUser(result.user);\n        } else {\n          setError(\"The google account is already registered\");\n        }\n      })\n      .catch((error) => alert(error.message));\n    // setName(user?.displayName);\n    // setEmail(user?.email);\n  };\n\n  return (\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <div className=\"signup\">\n          <div className=\"container\">\n            <form onSubmit={submit} className=\"signup__form\" autoComplete=\"off\">\n              <h1 className=\"signup__heading signup__el\">SIGN UP</h1>\n              <TextField\n                required\n                label=\"username\"\n                type=\"text\"\n                variant=\"outlined\"\n                className=\"signup__input signup__el\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n              <TextField\n                required\n                className=\"signup__input signup__el\"\n                label=\"email\"\n                type=\"email\"\n                variant=\"outlined\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <TextField\n                required\n                className=\"signup__input signup__el\"\n                label=\"Password\"\n                type=\"password\"\n                variant=\"outlined\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <TextField\n                required\n                className=\"signup__input signup__el\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                variant=\"outlined\"\n                value={confirmPass}\n                onChange={(e) => confirmPassword(e)}\n              />\n              {error}\n              <Button type=\"submit\" className=\"signup__button\">\n                Register\n              </Button>\n              <span className=\"signup__el signup__heading2\">Or</span>\n            </form>\n            <Button\n              onClick={signupGoogle}\n              className=\"signup__google__button signup__el\"\n            >\n              Google\n            </Button>\n            <hr />\n            <span className=\"signup__heading3\">\n              Already have an account ?\n              <Link to=\"/login\" className=\"signup__heading3__link\">\n                Log In\n              </Link>\n            </span>\n          </div>\n        </div>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n};\n\nexport default Signup;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Home/Home.js",[],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Login/Login.js",["93","94"],"import React, { useState, useEffect } from \"react\";\nimport \"./Login.css\";\nimport { auth, provider } from \"../../firebase\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"../../axios\";\n\nimport { Button, TextField, StylesProvider } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\n\nimport { actionTypes } from \"../../reducer\";\nimport { useStateValue } from \"../../StateProvider\";\n\nconst Login = () => {\n  const [{ jwt }, dispatch] = useStateValue();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  // const [isNewUser, setIsNewUser] = useState(false);\n  const [error, setError] = useState(\"\");\n  // const [token, setToken] = useState(\"\");\n\n  // useEffect(() => {\n  //   setToken(localStorage.getItem(\"chattrJWT\"));\n  //   if (token) {\n  //     const token = localStorage.getItem(\"chattrJWT\");\n  //     const accessToken = `Bearer ${token}`;\n  //     getUserWithJWT(accessToken);\n  //   }\n  // }, []);\n\n  // const getUserWithJWT = async (accessToken) => {\n  //   try {\n  //     await axios\n  //       .post(\"/auth/login\", {\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //           Authorization: accessToken,\n  //         },\n  //       })\n  //       .then((res) => {\n  //         console.log(res);\n  //         // const userData = res.data;\n  //         // if (userData.userExists) {\n  //         //   // Executing only if the server sends that the {userExists:true}\n  //         //   setError(\"\");\n  //         //   console.log(\"user exists\");\n  //         //   localStorage.setItem(\"chattrJWT\", res.data.accessToken);\n  //         //   dispatch({\n  //         //     type: actionTypes.SET_USER,\n  //         //     user: res.data.user,\n  //         //   });\n  //         // } else if (!userData.userExists) {\n  //         //   setError(\"user does not exists... First sign up\");\n  //         //   // history.push(\"/signup\");\n  //         // } else {\n  //         //   setError(\"Something went wrong\");\n  //         //   console.log(\"issue with logging in the user\");\n  //         // }\n  //       })\n  //       .catch((err) => {\n  //         console.log(\"login\", err);\n  //       });\n  //   } catch {\n  //     console.log(\"problem with logging in\");\n  //   }\n  // };\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#131a08\",\n      },\n      secondary: {\n        main: green[500],\n      },\n    },\n  });\n\n  const getUserWithGoogle = async ({ email, uid }) => {\n    try {\n      await axios\n        .post(\"/auth/login\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          email,\n          uid,\n          loginType: \"google\",\n        })\n        .then((res) => {\n          console.log(res);\n          const userData = res.data;\n          if (userData.userExists) {\n            // Executing only if the server sends that the {userExists:true}\n            setError(\"\");\n            console.log(\"user exists\");\n            localStorage.setItem(\"chattrJWT\", res.data.accessToken);\n            const token = res.data.accessToken;\n            const accessToken = `Bearer ${token}`;\n            dispatch({\n              type: actionTypes.SET_JWT,\n              accessToken,\n            });\n            dispatch({\n              type: actionTypes.SET_USER,\n              user: res.data.user,\n            });\n            history.push(\"/rooms\");\n          } else if (!userData.userExists) {\n            setError(\"user does not exists... First sign up\");\n            // history.push(\"/signup\");\n          } else {\n            setError(\"Something went wrong\");\n            console.log(\"issue with logging in the user\");\n          }\n        })\n        .catch((err) => {\n          console.log(\"login\", err);\n        });\n    } catch {\n      console.log(\"problem with logging in\");\n    }\n  };\n\n  const getUserWithEmailPassword = async (email, password) => {\n    try {\n      await axios\n        .post(\n          \"/auth/login\",\n          {\n            email,\n            password,\n            loginType: \"emailandpassword\",\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res);\n          const userData = res.data;\n          if (userData.userExists) {\n            // Executing only if the server sends that the {userExists:true}\n            setError(\"\");\n            console.log(\"user exists\");\n            localStorage.setItem(\"chattrJWT\", res.data.accessToken);\n            const token = res.data.accessToken;\n            const accessToken = `Bearer ${token}`;\n            dispatch({\n              type: actionTypes.SET_JWT,\n              accessToken,\n            });\n            dispatch({\n              type: actionTypes.SET_USER,\n              user: res.data.user,\n            });\n            //\n            history.push(\"/rooms\");\n            //\n          } else if (!userData.userExists) {\n            setError(\"user does not exists... First sign up\");\n            // history.push(\"/signup\");\n          } else {\n            setError(\"Something went wrong\");\n            console.log(\"issue with logging in the user\");\n          }\n        })\n        .catch((err) => {\n          console.log(\"login\", err);\n        });\n    } catch {\n      console.log(\"problem with logging in\");\n    }\n  };\n\n  const signInWithGoogle = async () => {\n    await auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        getUserWithGoogle(result.user);\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    getUserWithEmailPassword(email, password);\n  };\n\n  return (\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <div className=\"login\">\n          <div className=\"login__container\">\n            {/* <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\"\n          alt=\"monkey\"\n        /> */}\n\n            <form onSubmit={submit} className=\"login__form\">\n              <h1 className=\"login__text login__el\">Log In</h1>\n              <TextField\n                required\n                className=\"login__input login__el\"\n                label=\"email\"\n                type=\"email\"\n                variant=\"outlined\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <TextField\n                required\n                className=\"login__input login__el\"\n                label=\"Password\"\n                type=\"password\"\n                variant=\"outlined\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button type=\"submit\" className=\"login__button login__el\">\n                Sign In\n              </Button>\n            </form>\n            {error}\n            <span className=\"login__text2\">Or</span>\n            <Button\n              onClick={signInWithGoogle}\n              className=\"login__google__button\"\n            >\n              Sign In with Google\n            </Button>\n\n            <hr />\n            <span className=\"login__signup__text\">\n              Does'nt have an account yet ?{\" \"}\n              <Link to=\"/signup\" className=\"login__signup__text__link\">\n                Sing Up\n              </Link>\n            </span>\n          </div>\n        </div>\n      </ThemeProvider>\n    </StylesProvider>\n    // ) : (\n    //   <>{history.push(\"/rooms\")}</>\n    // );\n    // );\n    // );\n  );\n};\n\nexport default Login;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Sidebar/Sidebar.js",["95","96","97","98"],"import React, { useState, useEffect } from \"react\";\nimport \"./Sidebar.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SidebarChat from \"../SidebarChat/SidebarChat\";\nimport firebase from \"firebase\";\nimport GroupModal from \"./GroupModal/GroupModal\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ProfileModal from \"./ProfileModal/ProfileModal.js\";\n\nimport axios from \"../../axios\";\nimport { actionTypes } from \"../../reducer\";\nimport { useStateValue } from \"../../StateProvider\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst Sidebar = () => {\n  // const [rooms, setRooms] = useState([]);\n  const [{ user, room, jwt, people, currentRoom }, dispatch] = useStateValue();\n  const [err, setErr] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  const { roomId } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const history = useHistory();\n\n  useEffect(() => {}, [roomId]);\n\n  // Fetching the ROOMS and the initial messages from the server\n  useEffect(() => {\n    if (user) {\n      const getRooms = async () => {\n        await axios\n          .get(\"/rooms\", {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              // user: user.email,\n              Authorization: jwt,\n            },\n          })\n          .then((res) => {\n            dispatch({\n              type: actionTypes.SET_ROOM,\n              room: res.data.data.map((room) => room),\n              // room: res.data.room,\n            });\n            dispatch({\n              type: actionTypes.SET_PEOPLE,\n              people: res.data.peoples.map((p) => p),\n              // room: res.data.room,\n            });\n\n            console.log(\"fetched the rooms\", res);\n          })\n          .catch((err) => {\n            console.log(\"error fetching rooms\", err);\n            signoutInvalid();\n            // setErr(JSON.stringify(err));\n          });\n      };\n      getRooms();\n    } else {\n      // history.push(\"/login\");\n    }\n    if (user.photoURL == null) {\n      setSeed(Math.floor(Math.random() * 5000));\n    }\n  }, []);\n\n  const signoutInvalid = async () => {\n    await firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        history.push(\"/login\");\n        dispatch({\n          type: actionTypes.SIGNOUT_USER,\n        });\n      })\n      .catch((err) => {\n        console.log(\"err signing out\", err);\n      });\n  };\n\n  // Testing__End\n\n  const signout = async () => {\n    await firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        history.push(\"/login\");\n        dispatch({\n          type: actionTypes.SIGNOUT_USER,\n        });\n      })\n      .catch((err) => {\n        console.log(\"err signing out\", err);\n      });\n\n    history.push(\"/login\");\n    dispatch({\n      type: actionTypes.SIGNOUT_USER,\n    });\n\n    localStorage.removeItem(\"chattrJWT\");\n  };\n\n  const createGroup = async () => {\n    if (roomName) {\n      await axios\n        .post(`/rooms`, {\n          name: roomName,\n          data: [],\n          users: [user.email],\n        })\n        .then((res) => console.log(res))\n        .catch((err) => console.log(err));\n    }\n\n    console.log(roomName);\n    setRoomName(\"\");\n  };\n\n  const optionsClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const optionsClose = () => {\n    setAnchorEl(null);\n  };\n\n  const userNameUpdate = async (userName) => {\n    if (userName != user.name) {\n      await axios\n        .put(\n          \"/auth/login\",\n          {\n            change: \"userNameUpdate\",\n            newUserName: userName,\n          },\n          {\n            headers: {\n              // \"Content-Type\": \"application/json\",\n              Authorization: jwt,\n            },\n          }\n        )\n        .then((res) => {\n          dispatch({\n            type: actionTypes.SET_USER,\n            user: res.data,\n          });\n          console.log(\"username update\", res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const onDelAcc = async () => {\n    await axios\n      .delete(\"/auth/login\", {\n        headers: {\n          Authorization: jwt,\n        },\n      })\n      .then((res) => {\n        signout();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar\n          src={\n            user.photoURL\n              ? user.photoURL\n              : `https://avatars.dicebear.com/api/human/${seed}.svg`\n          }\n        />\n        <div className=\"sidebar__headerRight\">\n          <IconButton onClick={() => console.log(people, room)}>\n            <MoreVertIcon />\n          </IconButton>\n          <IconButton onClick={optionsClick}>\n            <MoreVertIcon />\n          </IconButton>\n          {/* <IconButton onClick={}>\n            <ExitToAppIcon />\n          </IconButton> */}\n          {/* Menu */}\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={optionsClose}\n          >\n            <MenuItem>\n              <ProfileModal onSubmit={userNameUpdate} onDelAcc={onDelAcc} />\n            </MenuItem>\n            <MenuItem onClick={signout}>Logout</MenuItem>\n          </Menu>\n          {/*  */}\n        </div>\n      </div>\n\n      <div className=\"sidebar__search\">\n        <GroupModal\n          roomName={roomName}\n          setRoomName={setRoomName}\n          onSubmit={createGroup}\n        />\n      </div>\n\n      <div className=\"sidebar__chats\">\n        {/* <SidebarChat addNewChat /> */}\n        {room.map((r) => (\n          <SidebarChat\n            key={r._id}\n            id={r._id}\n            name={r.name}\n            // selected={r._id === roomId}\n          />\n        ))}\n        {err}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Chat/Chat.js",["99","100","101","102","103","104"],"import React, { useState, useEffect } from \"react\";\nimport \"./Chat.css\";\n\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n// import db from \"./firebase\";\nimport firebase from \"firebase\";\nimport axios from \"../../axios\";\nimport Pusher from \"pusher-js\";\n\nimport { useParams } from \"react-router-dom\";\nimport { actionTypes } from \"../../reducer\";\nimport { useStateValue } from \"../../StateProvider\";\n\nconst Chat = () => {\n  const [seed, setSeed] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const { roomId } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [{ user, room, jwt, people }, dispatch] = useStateValue();\n\n  // new thing PUSHER\n  useEffect(() => {\n    const pusher = new Pusher(\"ef3c3aa07c44c7f445e9\", {\n      cluster: \"ap2\",\n    });\n\n    const channelRoom = pusher.subscribe(\"rooms\");\n\n    channelRoom.bind(\"updated\", (data) => {\n      console.log(\"i am testing\", data);\n      //\n      if (data.type == \"messageUpdate\") {\n        const msg = data?.data;\n\n        const msgData = Object.values(msg)[1];\n        // if (msgData) {\n        const isRoomFound = room.find((r) => r._id === data.roomId._id);\n        if (isRoomFound) {\n          const msgRoomId = data.roomId._id;\n          console.log(\"i am chat\", msgData);\n\n          dispatch({\n            type: actionTypes.SET_MESSAGE,\n            roomId: msgRoomId,\n            msg: msgData,\n          });\n          console.log(\"chat\", msgData);\n\n          // setMessages(() =>\n          //   msgRoomId === msgRoomId ? [...messages, msgData] : [...messages]\n          // );\n        }\n        // }\n      } else if (data.type === \"userUpdate\") {\n        console.log(\"i am second chat\", data);\n        const isRoomFound = room.find((r) => r._id === data.roomId._id);\n        if (!isRoomFound) {\n          const getRooms = async () => {\n            await axios\n              .get(\"/rooms\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: jwt,\n                },\n              })\n              .then((res) => {\n                console.log(\"from chat\", res);\n                dispatch({\n                  type: actionTypes.SET_ROOM,\n                  room: res.data.data.map((room) => room),\n                });\n                dispatch({\n                  type: actionTypes.SET_PEOPLE,\n                  people: res.data.peoples.map((p) => p),\n                });\n\n                console.log(\"fetched the rooms\", res);\n              })\n              .catch((err) => {\n                console.log(\"error fetching rooms\", err);\n                // signoutInvalid();\n                // setErr(JSON.stringify(err));\n              });\n          };\n          getRooms();\n        } else {\n          dispatch({\n            type: actionTypes.UPDATE_PEOPLE,\n            people: data.userDetails[0],\n            roomId: data.roomId._id,\n          });\n        }\n      } else if (data.type === \"userDelete\") {\n        if (data.usersRemain.includes(user.email)) {\n          dispatch({\n            type: actionTypes.USER_LEFT,\n            users: data.usersRemain,\n            roomId: data.roomId._id,\n          });\n        }\n      }\n    });\n\n    return () => {\n      channelRoom.unbind_all();\n      channelRoom.unsubscribe();\n    };\n  }, [roomId, room]);\n\n  // new thing__end PUSHER\n\n  useEffect(() => {\n    if (roomId) {\n      const room_data = room.filter((room) => {\n        return room._id == roomId;\n      })[0];\n      setRoomName(room_data?.name);\n      setMessages(room_data?.data);\n      dispatch({\n        type: actionTypes.SET_CURRENT_ROOM,\n        room: room_data?._id,\n      });\n    }\n  }, [roomId, room]);\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [roomId]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (input !== \"\") {\n      await axios\n        .put(`/rooms/${roomId}`, {\n          message: input,\n          name: user.name,\n          timestamp: Date.now(),\n        })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => console.log(err));\n\n      setInput(\"\");\n    }\n\n    // setMessages([...messages]);\n  };\n\n  // Menu Opening and Closing\n  const optionsClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const optionsClose = () => {\n    setAnchorEl(null);\n  };\n  // Menu\n\n  // Deleting the Room\n  const deleteRoom = async () => {\n    await axios\n      .delete(`/rooms/${roomId}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: jwt,\n        },\n      })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // Leaving the Room\n  const leaveRoom = async () => {\n    await axios\n      .delete(`/rooms/${roomId}/user/${user.email}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: jwt,\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        console.log(\"pusher leave room\", res);\n        dispatch({\n          type: actionTypes.LEAVE_ROOM,\n          user: res.data,\n          roomId: roomId,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"chat\">\n      {/* Header */}\n      <div className=\"chat__header\">\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n        <div className=\"chat__headerInfo\">\n          <h3>{roomName}</h3>\n          {/* <p> */}\n          {/* Last Seen yet to be Updated */}\n          {/* {new Date(\n              messages[messages.length - 1]?.timestamp?.toDate()\n            ).toUTCString()} */}\n          {/* </p> */}\n        </div>\n        <div className=\"chat__headerRight\">\n          <IconButton onClick={optionsClick}>\n            <MoreVertIcon />\n          </IconButton>\n\n          {/* Menu */}\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={optionsClose}\n          >\n            <MenuItem onClick={deleteRoom}>Delete Room</MenuItem>\n            <MenuItem onClick={leaveRoom}>Leave Room</MenuItem>\n          </Menu>\n          {/* Menu End */}\n        </div>\n      </div>\n\n      {/* Chat Body */}\n      <div className=\"chat__body\">\n        {messages?.map((message) => (\n          <p\n            key={message?._id}\n            className={`chat__message ${\n              message?.name === user?.name && \"chat__reciever\"\n            }`}\n          >\n            <span className=\"chat__name\">{message?.name}</span>\n            {message?.message}\n            <span className=\"chat__timestamp\">\n              {new Date(message?.createdAt)\n                .toLocaleTimeString([], {\n                  hour12: true,\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                })\n                .toString()}\n              {/* {new Date(message.timestamp?.toDate()).toUTCString()} */}\n            </span>\n          </p>\n        ))}\n      </div>\n\n      {/* Chat Input Footer */}\n      <div className=\"chat__footer\">\n        <InsertEmoticonIcon />\n        <form>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Enter a Message...\"\n          />\n          <button onClick={sendMessage} type=\"submit\">\n            Send a Message\n          </button>\n        </form>\n        <MicIcon />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/SidebarChat/SidebarChat.js",["105","106"],"import React, { useState, useEffect } from \"react\";\nimport \"./SidebarChat.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useStateValue } from \"../../StateProvider\";\n// import axios from \"../../axios\";\n\nconst SidebarChat = ({ id, name }) => {\n  const [seed, setSeed] = useState(\"\");\n  const [{ currentRoom }, dispatch] = useStateValue();\n  const { roomId } = useParams();\n  const [isSelected, setIsSelected] = useState(false);\n\n  useEffect(() => {\n    //   if (id) {\n    //     // db.collection(\"rooms\")\n    //     //   .doc(id)\n    //     //   .collection(\"messages\")\n    //     //   .orderBy(\"timestamp\", \"desc\")\n    //     //   .onSnapshot((snapshot) =>\n    //     //     setMessages(snapshot.docs.map((doc) => doc.data()))\n    //     //   );\n\n    //     // setMessages(room.map((room) => room.data));\n\n    //     const thisRoom = room.filter((room) => room._id === id)[0].data;\n    //     // thisRoom.sortBy((msg) => msg.message);\n    //     // thisRoom.sort((a, b) => new Date(a.date) - new Date(b.date));\n    //     console.log(\"this room sidebarchat\", thisRoom);\n    //     setMessages(thisRoom);\n    //   }\n\n    setIsSelected(id === currentRoom);\n  }, [roomId, currentRoom]);\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  // return !addNewChat ? (\n  return (\n    <div>\n      <Link to={`/rooms/${id}`}>\n        <div\n          // className=\"sidebarChat\"\n          className={`sidebarChat ${isSelected && \"sidebarChat__selected\"}`}\n        >\n          <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n          <div className=\"sidebar__info\">\n            <h2>{name}</h2>\n            {/* <p>{messages[messages.length - 1]?.message}</p> */}\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default SidebarChat;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Detailsbar/Detailsbar.js",["107","108","109","110","111","112","113"],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Sidebar/GroupModal/GroupModal.js",["114"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { IconButton } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst GroupModal = ({ inputValue, setInputValue, onSubmit }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    setOpen(false);\n    onSubmit();\n  };\n\n  return (\n    <div>\n      <IconButton onClick={handleClickOpen} className=\"sidebar__add__button\">\n        <AddCircleIcon />\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add Group</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the name of the Group to create.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Group Name\"\n            type=\"text\"\n            fullWidth\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default GroupModal;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Detailsbar/Modal/UserModal.js",["115"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { IconButton } from \"@material-ui/core\";\nimport PersonAddRoundedIcon from \"@material-ui/icons/PersonAddRounded\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst UserModal = ({ inputValue, setInputValue, onSubmit, name }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    setOpen(false);\n    onSubmit();\n  };\n\n  return (\n    <div>\n      <IconButton onClick={handleClickOpen}>\n        <PersonAddRoundedIcon />\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add People</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the Email of the Person to add them to this Group.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default UserModal;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Sidebar/ProfileModal/ProfileModal.js",["116","117"],"import React, { useState, useEffect } from \"react\";\nimport \"./ProfileModal.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { IconButton } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useStateValue } from \"../../../StateProvider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst ProfileModal = ({ onSubmit, onDelAcc }) => {\n  const [open, setOpen] = useState(false);\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const [openDel, setOpenDel] = useState(false);\n  const [{ user }, dispatch] = useStateValue();\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const [userName, setUserName] = useState(user.name);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setOpenConfirm(false);\n    setIsDisabled(true);\n    setOpenDel(false);\n  };\n\n  const handleSubmit = () => {\n    setOpenConfirm(true);\n  };\n\n  const onConfirmSubmit = () => {\n    onSubmit(userName);\n    setIsDisabled(true);\n    setOpenConfirm(false);\n    setOpen(false);\n  };\n\n  const delAcc = () => {\n    setOpenConfirm(false);\n    setOpen(false);\n    setOpenDel(false);\n    onDelAcc();\n  };\n\n  const delAccCancel = () => {\n    setOpenConfirm(false);\n    setOpenDel(false);\n  };\n\n  return (\n    <div>\n      <div onClick={handleClickOpen} className=\"sidebar__add__button\">\n        Profile\n      </div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Edit Profile</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Edit the User name that will be visible to others.\n          </DialogContentText>\n\n          <Grid container spacing={3} alignItems=\"flex-end\">\n            <Grid item>\n              <TextField\n                disabled={isDisabled}\n                id=\"name\"\n                // label=\"User Name\"\n                type=\"text\"\n                margin=\"dense\"\n                fullWidth\n                style={{ width: 400 }}\n                value={userName}\n                onChange={(e) => setUserName(e.target.value)}\n              />\n            </Grid>\n            <Grid item>\n              <IconButton onClick={() => setIsDisabled(!isDisabled)}>\n                <EditIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n          <br />\n          <Button\n            className=\"profile__delete__button\"\n            onClick={() => setOpenDel(true)}\n          >\n            Delete Account\n          </Button>\n          <DialogContentText>\n            This will delete your account completely.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Apply\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* User Name Confirm Dialog */}\n      <Dialog\n        open={openConfirm}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Confirm?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure to change the user name.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onConfirmSubmit} color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* User Name Confirm Dialog End */}\n\n      {/* Delete Account Confirm Dialog */}\n      <Dialog\n        open={openDel}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete Account\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure to delete the current account?.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={delAcc} color=\"primary\">\n            Confirm\n          </Button>\n          <Button onClick={delAccCancel} color=\"primary\" autoFocus>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* Delete Account Confirm Dialog End */}\n    </div>\n  );\n};\n\nexport default ProfileModal;\n",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":23,"column":24,"nodeType":"124","messageId":"125","endLine":23,"endColumn":27},{"ruleId":"122","severity":1,"message":"126","line":24,"column":10,"nodeType":"124","messageId":"125","endLine":24,"endColumn":13},{"ruleId":"122","severity":1,"message":"127","line":24,"column":15,"nodeType":"124","messageId":"125","endLine":24,"endColumn":21},{"ruleId":"128","severity":1,"message":"129","line":39,"column":6,"nodeType":"130","endLine":39,"endColumn":8,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":126,"column":6,"nodeType":"130","endLine":126,"endColumn":12,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":122,"column":28,"nodeType":"136","messageId":"137","endLine":122,"endColumn":30},{"ruleId":"122","severity":1,"message":"138","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"139","line":19,"column":10,"nodeType":"124","messageId":"125","endLine":19,"endColumn":14},{"ruleId":"134","severity":1,"message":"140","line":117,"column":35,"nodeType":"136","messageId":"137","endLine":117,"endColumn":37},{"ruleId":"134","severity":1,"message":"140","line":125,"column":14,"nodeType":"136","messageId":"137","endLine":125,"endColumn":16},{"ruleId":"122","severity":1,"message":"138","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"123","line":16,"column":12,"nodeType":"124","messageId":"125","endLine":16,"endColumn":15},{"ruleId":"122","severity":1,"message":"141","line":19,"column":37,"nodeType":"124","messageId":"125","endLine":19,"endColumn":48},{"ruleId":"122","severity":1,"message":"127","line":20,"column":15,"nodeType":"124","messageId":"125","endLine":20,"endColumn":21},{"ruleId":"128","severity":1,"message":"142","line":69,"column":6,"nodeType":"130","endLine":69,"endColumn":8,"suggestions":"143"},{"ruleId":"134","severity":1,"message":"135","line":135,"column":18,"nodeType":"136","messageId":"137","endLine":135,"endColumn":20},{"ruleId":"122","severity":1,"message":"144","line":11,"column":8,"nodeType":"124","messageId":"125","endLine":11,"endColumn":16},{"ruleId":"122","severity":1,"message":"145","line":26,"column":29,"nodeType":"124","messageId":"125","endLine":26,"endColumn":35},{"ruleId":"134","severity":1,"message":"140","line":39,"column":21,"nodeType":"136","messageId":"137","endLine":39,"endColumn":23},{"ruleId":"128","severity":1,"message":"146","line":115,"column":6,"nodeType":"130","endLine":115,"endColumn":20,"suggestions":"147"},{"ruleId":"134","severity":1,"message":"140","line":122,"column":25,"nodeType":"136","messageId":"137","endLine":122,"endColumn":27},{"ruleId":"128","severity":1,"message":"148","line":131,"column":6,"nodeType":"130","endLine":131,"endColumn":20,"suggestions":"149"},{"ruleId":"122","severity":1,"message":"150","line":10,"column":27,"nodeType":"124","messageId":"125","endLine":10,"endColumn":35},{"ruleId":"128","severity":1,"message":"151","line":34,"column":6,"nodeType":"130","endLine":34,"endColumn":27,"suggestions":"152"},{"ruleId":"122","severity":1,"message":"153","line":4,"column":18,"nodeType":"124","messageId":"125","endLine":4,"endColumn":28},{"ruleId":"122","severity":1,"message":"154","line":9,"column":10,"nodeType":"124","messageId":"125","endLine":9,"endColumn":16},{"ruleId":"122","severity":1,"message":"155","line":12,"column":10,"nodeType":"124","messageId":"125","endLine":12,"endColumn":21},{"ruleId":"122","severity":1,"message":"156","line":14,"column":21,"nodeType":"124","messageId":"125","endLine":14,"endColumn":31},{"ruleId":"122","severity":1,"message":"150","line":17,"column":34,"nodeType":"124","messageId":"125","endLine":17,"endColumn":42},{"ruleId":"122","severity":1,"message":"157","line":21,"column":10,"nodeType":"124","messageId":"125","endLine":21,"endColumn":18},{"ruleId":"128","severity":1,"message":"158","line":38,"column":6,"nodeType":"130","endLine":38,"endColumn":8,"suggestions":"159"},{"ruleId":"122","severity":1,"message":"138","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"138","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"138","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"150","line":19,"column":20,"nodeType":"124","messageId":"125","endLine":19,"endColumn":28},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'jwt' is assigned a value but never used.","Identifier","unusedVar","'err' is assigned a value but never used.","'setErr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'getUserWithJWT'. Either include them or remove the dependency array.","ArrayExpression",["162"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user?.email'. Either include them or remove the dependency array.",["163"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'user' is assigned a value but never used.","Expected '===' and instead saw '=='.","'currentRoom' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'jwt', 'signoutInvalid', and 'user'. Either include them or remove the dependency array.",["164"],"'firebase' is defined but never used.","'people' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'jwt', and 'user.email'. Either include them or remove the dependency array.",["165"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["166"],"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. If 'setIsSelected' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["167"],"'IconButton' is defined but never used.","'Button' is defined but never used.","'actionTypes' is defined but never used.","'useHistory' is defined but never used.","'roomName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.photoURL'. Either include it or remove the dependency array.",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [dispatch, getUserWithJWT]",{"range":"183","text":"184"},"Update the dependencies array to be: [dispatch, room, user?.email]",{"range":"185","text":"186"},"Update the dependencies array to be: [dispatch, jwt, signoutInvalid, user]",{"range":"187","text":"188"},"Update the dependencies array to be: [roomId, room, dispatch, jwt, user.email]",{"range":"189","text":"190"},"Update the dependencies array to be: [roomId, room, dispatch]",{"range":"191","text":"192"},"Update the dependencies array to be: [roomId, currentRoom, id]",{"range":"193","text":"194"},"Update the dependencies array to be: [user.photoURL]",{"range":"195","text":"196"},[1137,1139],"[dispatch, getUserWithJWT]",[3473,3479],"[dispatch, room, user?.email]",[2234,2236],"[dispatch, jwt, signoutInvalid, user]",[3649,3663],"[roomId, room, dispatch, jwt, user.email]",[4013,4027],"[roomId, room, dispatch]",[1223,1244],"[roomId, currentRoom, id]",[1396,1398],"[user.photoURL]"]