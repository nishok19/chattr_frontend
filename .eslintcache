[{"/home/nishok/MY/projects/college_project/chatapp_frontend/src/index.js":"1","/home/nishok/MY/projects/college_project/chatapp_frontend/src/App.js":"2","/home/nishok/MY/projects/college_project/chatapp_frontend/src/reportWebVitals.js":"3","/home/nishok/MY/projects/college_project/chatapp_frontend/src/reducer.js":"4","/home/nishok/MY/projects/college_project/chatapp_frontend/src/StateProvider.js":"5","/home/nishok/MY/projects/college_project/chatapp_frontend/src/firebase.js":"6","/home/nishok/MY/projects/college_project/chatapp_frontend/src/axios.js":"7","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Singup/Signup.js":"8","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Home/Home.js":"9","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Login/Login.js":"10","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Sidebar/Sidebar.js":"11","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Chat/Chat.js":"12","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/SidebarChat/SidebarChat.js":"13","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Detailsbar/Detailsbar.js":"14","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Sidebar/GroupModal/GroupModal.js":"15","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Detailsbar/Modal/UserModal.js":"16"},{"size":688,"mtime":1610264045074,"results":"17","hashOfConfig":"18"},{"size":3438,"mtime":1612190673631,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610264045690,"results":"20","hashOfConfig":"18"},{"size":2826,"mtime":1612613894281,"results":"21","hashOfConfig":"18"},{"size":364,"mtime":1610264046410,"results":"22","hashOfConfig":"18"},{"size":1381,"mtime":1611257746183,"results":"23","hashOfConfig":"18"},{"size":126,"mtime":1610360232186,"results":"24","hashOfConfig":"18"},{"size":6074,"mtime":1611938692486,"results":"25","hashOfConfig":"18"},{"size":333,"mtime":1611950112909,"results":"26","hashOfConfig":"18"},{"size":7646,"mtime":1612289329495,"results":"27","hashOfConfig":"18"},{"size":5139,"mtime":1612629654030,"results":"28","hashOfConfig":"18"},{"size":6595,"mtime":1612614686925,"results":"29","hashOfConfig":"18"},{"size":1857,"mtime":1612614655761,"results":"30","hashOfConfig":"18"},{"size":3533,"mtime":1612589364657,"results":"31","hashOfConfig":"18"},{"size":1909,"mtime":1612275117471,"results":"32","hashOfConfig":"18"},{"size":1932,"mtime":1612270462914,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"rvwv45",{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},"/home/nishok/MY/projects/college_project/chatapp_frontend/src/index.js",[],["76","77"],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/App.js",["78","79","80","81","82"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n} from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Detailsbar from \"./components/Detailsbar/Detailsbar\";\nimport Chat from \"./components/Chat/Chat\";\nimport Home from \"./components/Home/Home\";\nimport Signup from \"./components/Singup/Signup\";\nimport Pusher from \"pusher-js\";\nimport axios from \"./axios\";\n\nimport { actionTypes } from \"./reducer\";\nimport { useStateValue } from \"./StateProvider\";\n// import { auth, provider } from \"./firebase\";\n\nconst App = () => {\n  const [{ user, room, jwt }, dispatch] = useStateValue();\n  const [err, setErr] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"chattrJWT\");\n    if (token) {\n      const accessToken = `Bearer ${token}`;\n      dispatch({\n        type: actionTypes.SET_JWT,\n        accessToken,\n      });\n      getUserWithJWT(accessToken);\n      // history.push(\"/rooms\");\n      // console.log(jwt);\n    }\n  }, []);\n\n  const getUserWithJWT = async (accessToken) => {\n    try {\n      await axios\n        .get(\"/auth/login\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: accessToken,\n          },\n        })\n        .then((res) => {\n          console.log(res);\n          const userData = res.data;\n          if (userData.userExists) {\n            // Executing only if the server sends that the {userExists:true}\n            // setError(\"\");\n            console.log(\"user exists\");\n            dispatch({\n              type: actionTypes.SET_USER,\n              user: res.data.user,\n            });\n          } else if (!userData.userExists) {\n            // setError(\"user does not exists... First sign up\");\n            history.push(\"/login\");\n          } else {\n            // setError(\"Something went wrong\");\n            console.log(\"issue with logging in the user\");\n          }\n        })\n        .catch((err) => {\n          console.log(\"login\", err);\n        });\n    } catch {\n      console.log(\"problem with logging in\");\n    }\n  };\n\n  // pusher\n  useEffect(() => {\n    const pusher = new Pusher(\"ef3c3aa07c44c7f445e9\", {\n      cluster: \"ap2\",\n    });\n\n    const channelRoom = pusher.subscribe(\"rooms\");\n    channelRoom.bind(\"inserted\", (room) => {\n      // alert(JSON.stringify(data));\n      console.log(\"pusher room\", room);\n      dispatch({\n        type: actionTypes.INSERT_NEW_ROOM,\n        room: room,\n      });\n    });\n\n    return () => {\n      channelRoom.unbind_all();\n      channelRoom.unsubscribe();\n    };\n  }, [room]);\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Router>\n          <Switch>\n            <Route exact path=\"/home\" component={Home} />\n\n            <Route exact path=\"/login\" component={Login} />\n\n            <Route exact path=\"/signup\" component={Signup} />\n          </Switch>\n        </Router>\n      ) : (\n        <div className=\"app__body\">\n          <Router>\n            <Switch>\n              <Route path=\"/\">\n                <Sidebar />\n                <Route exact path=\"/rooms/:roomId\">\n                  <Chat />\n                  <Detailsbar />\n                </Route>\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/reportWebVitals.js",[],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/reducer.js",[],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/StateProvider.js",[],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/firebase.js",[],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/axios.js",[],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Singup/Signup.js",["83","84","85","86"],"import React, { useState, useEffect } from \"react\";\nimport \"./Signup.css\";\nimport axios from \"../../axios\";\n\nimport { Button, TextField, StylesProvider } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\n\nimport { auth, provider } from \"../../firebase.js\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Signup = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPass, setConfirmPass] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  const history = useHistory();\n\n  // useEffect(() => {\n  // }, []);\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#131a08\",\n      },\n      secondary: {\n        main: green[500],\n      },\n    },\n  });\n\n  const createUser = async () => {\n    await axios\n      .post(\"/auth/signup\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        email: email,\n        name: name,\n        password: password,\n      })\n      .then((res) => {\n        const userData = res.data;\n        console.log(userData);\n        if (userData.userExists) {\n          console.log(\"user already exists\");\n          setError(\"user already exists\");\n        } else if (!userData.userExists) {\n          console.log(\"user created\");\n          setError(\"\");\n          history.push(\"/login\");\n        } else {\n          setError(\"Something went wrong\");\n          console.log(\"issue with creating the user\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const createUserWithGoogle = async (\n    uid,\n    { displayName, email, providerId, photoURL }\n  ) => {\n    await axios\n      .post(\"/auth/signup\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        name: displayName,\n        email: email,\n        photoURL: photoURL,\n        provider: {\n          providerId,\n          uid,\n        },\n      })\n      .then((res) => {\n        const userData = res.data;\n        console.log(userData);\n        if (userData.userExists) {\n          console.log(\"user already exists\");\n          setError(\"user already exists\");\n        } else if (!userData.userExists) {\n          console.log(\"user created\");\n          setError(\"\");\n          history.push(\"/login\");\n        } else {\n          setError(\"Something went wrong\");\n          console.log(\"issue with creating the user\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    if (name && email && password == confirmPass) {\n      // console.log(name, email, password, confirmPass);\n      createUser();\n    }\n  };\n\n  const confirmPassword = (e) => {\n    setConfirmPass(e.target.value);\n    password == e.target.value\n      ? setError(\"\")\n      : setError(\"Passwords does'nt matches\");\n  };\n\n  const signupGoogle = async () => {\n    await auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        console.log(result);\n        if (\n          // result.additionalUserInfo.isNewUser &&\n          result.user.emailVerified\n          // error == \"\"\n        ) {\n          setName(result.user.displayName);\n          setEmail(result.user.email);\n          setError(\"\");\n          createUserWithGoogle(result.user.uid, result.user.providerData[0]);\n          setUser(result.user);\n        } else {\n          setError(\"The google account is already registered\");\n        }\n      })\n      .catch((error) => alert(error.message));\n    // setName(user?.displayName);\n    // setEmail(user?.email);\n  };\n\n  return (\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <div className=\"signup\">\n          <div className=\"container\">\n            <form onSubmit={submit} className=\"signup__form\" autoComplete=\"off\">\n              <h1 className=\"signup__heading signup__el\">SIGN UP</h1>\n              <TextField\n                required\n                label=\"username\"\n                type=\"text\"\n                variant=\"outlined\"\n                className=\"signup__input signup__el\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n              <TextField\n                required\n                className=\"signup__input signup__el\"\n                label=\"email\"\n                type=\"email\"\n                variant=\"outlined\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <TextField\n                required\n                className=\"signup__input signup__el\"\n                label=\"Password\"\n                type=\"password\"\n                variant=\"outlined\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <TextField\n                required\n                className=\"signup__input signup__el\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                variant=\"outlined\"\n                value={confirmPass}\n                onChange={(e) => confirmPassword(e)}\n              />\n              {error}\n              <Button type=\"submit\" className=\"signup__button\">\n                Register\n              </Button>\n              <span className=\"signup__el signup__heading2\">Or</span>\n            </form>\n            <Button\n              onClick={signupGoogle}\n              className=\"signup__google__button signup__el\"\n            >\n              Google\n            </Button>\n            <hr />\n            <span className=\"signup__heading3\">\n              Already have an account ?\n              <Link to=\"/login\" className=\"signup__heading3__link\">\n                Log In\n              </Link>\n            </span>\n          </div>\n        </div>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n};\n\nexport default Signup;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Home/Home.js",["87"],"import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Link to=\"/login\">{/* <Button>Login</Button> */}Login</Link>\n      <Link to=\"/signup\">{/* <Button>Signup</Button> */}Signup</Link>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Login/Login.js",["88","89","90"],"import React, { useState, useEffect } from \"react\";\nimport \"./Login.css\";\nimport { auth, provider } from \"../../firebase\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"../../axios\";\n\nimport { Button, TextField, StylesProvider } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\n\nimport { actionTypes } from \"../../reducer\";\nimport { useStateValue } from \"../../StateProvider\";\n\nconst Login = () => {\n  const [{ jwt }, dispatch] = useStateValue();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  // const [isNewUser, setIsNewUser] = useState(false);\n  const [error, setError] = useState(\"\");\n  // const [token, setToken] = useState(\"\");\n\n  // useEffect(() => {\n  //   setToken(localStorage.getItem(\"chattrJWT\"));\n  //   if (token) {\n  //     const token = localStorage.getItem(\"chattrJWT\");\n  //     const accessToken = `Bearer ${token}`;\n  //     getUserWithJWT(accessToken);\n  //   }\n  // }, []);\n\n  // const getUserWithJWT = async (accessToken) => {\n  //   try {\n  //     await axios\n  //       .post(\"/auth/login\", {\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //           Authorization: accessToken,\n  //         },\n  //       })\n  //       .then((res) => {\n  //         console.log(res);\n  //         // const userData = res.data;\n  //         // if (userData.userExists) {\n  //         //   // Executing only if the server sends that the {userExists:true}\n  //         //   setError(\"\");\n  //         //   console.log(\"user exists\");\n  //         //   localStorage.setItem(\"chattrJWT\", res.data.accessToken);\n  //         //   dispatch({\n  //         //     type: actionTypes.SET_USER,\n  //         //     user: res.data.user,\n  //         //   });\n  //         // } else if (!userData.userExists) {\n  //         //   setError(\"user does not exists... First sign up\");\n  //         //   // history.push(\"/signup\");\n  //         // } else {\n  //         //   setError(\"Something went wrong\");\n  //         //   console.log(\"issue with logging in the user\");\n  //         // }\n  //       })\n  //       .catch((err) => {\n  //         console.log(\"login\", err);\n  //       });\n  //   } catch {\n  //     console.log(\"problem with logging in\");\n  //   }\n  // };\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#131a08\",\n      },\n      secondary: {\n        main: green[500],\n      },\n    },\n  });\n\n  const getUserWithGoogle = async ({ email, uid }) => {\n    try {\n      await axios\n        .post(\"/auth/login\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          email,\n          uid,\n          loginType: \"google\",\n        })\n        .then((res) => {\n          console.log(res);\n          const userData = res.data;\n          if (userData.userExists) {\n            // Executing only if the server sends that the {userExists:true}\n            setError(\"\");\n            console.log(\"user exists\");\n            localStorage.setItem(\"chattrJWT\", res.data.accessToken);\n            const token = res.data.accessToken;\n            const accessToken = `Bearer ${token}`;\n            dispatch({\n              type: actionTypes.SET_JWT,\n              accessToken,\n            });\n            dispatch({\n              type: actionTypes.SET_USER,\n              user: res.data.user,\n            });\n          } else if (!userData.userExists) {\n            setError(\"user does not exists... First sign up\");\n            // history.push(\"/signup\");\n          } else {\n            setError(\"Something went wrong\");\n            console.log(\"issue with logging in the user\");\n          }\n        })\n        .catch((err) => {\n          console.log(\"login\", err);\n        });\n    } catch {\n      console.log(\"problem with logging in\");\n    }\n  };\n\n  const getUserWithEmailPassword = async (email, password) => {\n    try {\n      await axios\n        .post(\"/auth/login\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          email,\n          password,\n          loginType: \"emailandpassword\",\n        })\n        .then((res) => {\n          console.log(res);\n          const userData = res.data;\n          if (userData.userExists) {\n            // Executing only if the server sends that the {userExists:true}\n            setError(\"\");\n            console.log(\"user exists\");\n            localStorage.setItem(\"chattrJWT\", res.data.accessToken);\n            const token = res.data.accessToken;\n            const accessToken = `Bearer ${token}`;\n            dispatch({\n              type: actionTypes.SET_JWT,\n              accessToken,\n            });\n            dispatch({\n              type: actionTypes.SET_USER,\n              user: res.data.user,\n            });\n          } else if (!userData.userExists) {\n            setError(\"user does not exists... First sign up\");\n            // history.push(\"/signup\");\n          } else {\n            setError(\"Something went wrong\");\n            console.log(\"issue with logging in the user\");\n          }\n        })\n        .catch((err) => {\n          console.log(\"login\", err);\n        });\n    } catch {\n      console.log(\"problem with logging in\");\n    }\n  };\n\n  const signInWithGoogle = async () => {\n    await auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        getUserWithGoogle(result.user);\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    getUserWithEmailPassword(email, password);\n  };\n\n  // token == null ? (\n  //(\n  //   history.push(\"/rooms\")\n  // ) : (\n  return (\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <div className=\"login\">\n          <div className=\"login__container\">\n            {/* <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\"\n          alt=\"monkey\"\n        /> */}\n\n            <form onSubmit={submit} className=\"login__form\">\n              <h1 className=\"login__text login__el\">Log In</h1>\n              <TextField\n                required\n                className=\"login__input login__el\"\n                label=\"email\"\n                type=\"email\"\n                variant=\"outlined\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <TextField\n                required\n                className=\"login__input login__el\"\n                label=\"Password\"\n                type=\"password\"\n                variant=\"outlined\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button type=\"submit\" className=\"login__button login__el\">\n                Sign In\n              </Button>\n            </form>\n            {error}\n            <span className=\"login__text2\">Or</span>\n            <Button\n              onClick={signInWithGoogle}\n              className=\"login__google__button\"\n            >\n              Sign In with Google\n            </Button>\n\n            <hr />\n            <span className=\"login__signup__text\">\n              Does'nt have an account yet ?{\" \"}\n              <Link to=\"/signup\" className=\"login__signup__text__link\">\n                Sing Up\n              </Link>\n            </span>\n          </div>\n        </div>\n      </ThemeProvider>\n    </StylesProvider>\n    // ) : (\n    //   <>{history.push(\"/rooms\")}</>\n    // );\n    // );\n    // );\n  );\n};\n\nexport default Login;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Sidebar/Sidebar.js",["91","92","93","94","95","96","97","98"],"/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Chat/Chat.js",["99","100","101","102","103","104","105"],"import React, { useState, useEffect } from \"react\";\nimport \"./Chat.css\";\n\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\n// import db from \"./firebase\";\nimport firebase from \"firebase\";\nimport axios from \"../../axios\";\nimport Pusher from \"pusher-js\";\n\nimport { useParams } from \"react-router-dom\";\nimport { actionTypes } from \"../../reducer\";\nimport { useStateValue } from \"../../StateProvider\";\n\nconst Chat = () => {\n  const [seed, setSeed] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const { roomId } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [{ user, room, jwt }, dispatch] = useStateValue();\n\n  // new thing PUSHER\n  useEffect(() => {\n    const pusher = new Pusher(\"ef3c3aa07c44c7f445e9\", {\n      cluster: \"ap2\",\n    });\n\n    const channelRoom = pusher.subscribe(\"rooms\");\n\n    channelRoom.bind(\"updated\", (data) => {\n      console.log(\"i am testing\", data);\n      //\n      if (data.type === \"messageUpdate\") {\n        const msg = data?.data;\n\n        const msgData = Object.values(msg)[1];\n        console.log(\"i am chat\", msgData);\n        if (msgData) {\n          const isRoomFound = room.find((r) => r._id === data.roomId._id);\n          if (isRoomFound) {\n            const msgRoomId = data.roomId._id;\n            // updatedRoom = room.filter((r) => r._id == roomId);\n\n            dispatch({\n              type: actionTypes.SET_MESSAGE,\n              roomId: msgRoomId,\n              msg: msgData,\n            });\n\n            setMessages(() =>\n              msgRoomId === msgRoomId ? [...messages, msgData] : [...messages]\n            );\n          }\n        }\n      } else if (data.type === \"userUpdate\") {\n        console.log(\"i am second chat\", data);\n        const isRoomFound = room.find((r) => r._id === data.roomId._id);\n        if (!isRoomFound) {\n          const getRooms = async () => {\n            await axios\n              .get(\"/rooms\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  // user: user.email,\n                  Authorization: jwt,\n                },\n              })\n              .then((res) => {\n                console.log(\"from chat\", res);\n                dispatch({\n                  type: actionTypes.SET_ROOM,\n                  room: res.data.data.map((room) => room),\n                  // room: res.data.room,\n                });\n                dispatch({\n                  type: actionTypes.SET_PEOPLE,\n                  people: res.data.peoples.map((p) => p),\n                  // room: res.data.room,\n                });\n\n                console.log(\"fetched the rooms\", res);\n              })\n              .catch((err) => {\n                console.log(\"error fetching rooms\", err);\n                // signoutInvalid();\n                // setErr(JSON.stringify(err));\n              });\n          };\n          getRooms();\n        } else {\n          dispatch({\n            type: actionTypes.UPDATE_PEOPLE,\n            people: data.userDetails[0],\n            roomId: data.roomId._id,\n          });\n        }\n      }\n    });\n\n    return () => {\n      channelRoom.unbind_all();\n      channelRoom.unsubscribe();\n    };\n  }, [roomId, messages]);\n\n  // new thing__end PUSHER\n\n  useEffect(() => {\n    if (roomId) {\n      //   db.collection(\"rooms\")\n      //     .doc(roomId)\n      //     .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\n      //   db.collection(\"rooms\")\n      //     .doc(roomId)\n      //     .collection(\"messages\")\n      //     .orderBy(\"timestamp\", \"asc\")\n      //     .onSnapshot((snapshot) =>\n      //       setMessages(snapshot.docs.map((doc) => doc.data()))\n      //     );\n\n      const room_data = room.filter((room) => {\n        return room._id == roomId;\n      })[0];\n      setRoomName(room_data?.name);\n      setMessages(room_data?.data);\n      dispatch({\n        type: actionTypes.SET_CURRENT_ROOM,\n        room: room_data?._id,\n      });\n    }\n  }, [roomId, room, messages]);\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [roomId]);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    await axios.put(`/rooms/${roomId}`, {\n      message: input,\n      name: user.name,\n      timestamp: Date.now(),\n    });\n\n    // setMessages([...messages]);\n\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"chat\">\n      {/* Header */}\n      <div className=\"chat__header\">\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n        <div className=\"chat__headerInfo\">\n          <h3>{roomName}</h3>\n          {/* <p> */}\n          {/* Last Seen yet to be Updated */}\n          {/* {new Date(\n              messages[messages.length - 1]?.timestamp?.toDate()\n            ).toUTCString()} */}\n          {/* </p> */}\n        </div>\n        <div className=\"chat__headerRight\">\n          {/* <IconButton>\n            <SearchOutlined />\n          </IconButton>\n          <IconButton>\n            <AttachFile />\n          </IconButton> */}\n          <IconButton>\n            <MoreVert />\n          </IconButton>\n        </div>\n      </div>\n\n      {/* Chat Body */}\n      <div className=\"chat__body\">\n        {messages?.map((message) => (\n          <p\n            key={message?._id}\n            className={`chat__message ${\n              message?.name === user?.name && \"chat__reciever\"\n            }`}\n          >\n            <span className=\"chat__name\">{message?.name}</span>\n            {message?.message}\n            <span className=\"chat__timestamp\">\n              {new Date(message?.createdAt)\n                .toLocaleTimeString([], {\n                  hour12: true,\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                })\n                .toString()}\n              {/* {new Date(message.timestamp?.toDate()).toUTCString()} */}\n            </span>\n          </p>\n        ))}\n      </div>\n\n      {/* Chat Input Footer */}\n      <div className=\"chat__footer\">\n        <InsertEmoticonIcon />\n        <form>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Enter a Message...\"\n          />\n          <button onClick={sendMessage} type=\"submit\">\n            Send a Message\n          </button>\n        </form>\n        <MicIcon />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/SidebarChat/SidebarChat.js",["106","107"],"import React, { useState, useEffect } from \"react\";\nimport \"./SidebarChat.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useStateValue } from \"../../StateProvider\";\n// import axios from \"../../axios\";\n\nconst SidebarChat = ({ id, name }) => {\n  const [seed, setSeed] = useState(\"\");\n  const [{ currentRoom }, dispatch] = useStateValue();\n  const { roomId } = useParams();\n  const [isSelected, setIsSelected] = useState(false);\n\n  useEffect(() => {\n    //   if (id) {\n    //     // db.collection(\"rooms\")\n    //     //   .doc(id)\n    //     //   .collection(\"messages\")\n    //     //   .orderBy(\"timestamp\", \"desc\")\n    //     //   .onSnapshot((snapshot) =>\n    //     //     setMessages(snapshot.docs.map((doc) => doc.data()))\n    //     //   );\n\n    //     // setMessages(room.map((room) => room.data));\n\n    //     const thisRoom = room.filter((room) => room._id === id)[0].data;\n    //     // thisRoom.sortBy((msg) => msg.message);\n    //     // thisRoom.sort((a, b) => new Date(a.date) - new Date(b.date));\n    //     console.log(\"this room sidebarchat\", thisRoom);\n    //     setMessages(thisRoom);\n    //   }\n\n    setIsSelected(id === currentRoom);\n  }, [roomId, currentRoom]);\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  // return !addNewChat ? (\n  return (\n    <div>\n      <Link to={`/rooms/${id}`}>\n        <div\n          // className=\"sidebarChat\"\n          className={`sidebarChat ${isSelected && \"sidebarChat__selected\"}`}\n        >\n          <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n          <div className=\"sidebar__info\">\n            <h2>{name}</h2>\n            {/* <p>{messages[messages.length - 1]?.message}</p> */}\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default SidebarChat;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Detailsbar/Detailsbar.js",["108","109","110","111","112","113"],"import React, { useState, useEffect } from \"react\";\nimport \"./Detailsbar.css\";\nimport UserModal from \"../Detailsbar/Modal/UserModal\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\n// import ChatIcon from \"@material-ui/icons/Chat\";\n// import MoreVertIcon from \"@material-ui/icons/MoreVert\";\n// import AddIcon from \"@material-ui/icons/Add\";\n// import PersonAddRoundedIcon from \"@material-ui/icons/PersonAddRounded\";\nimport { Button } from \"@material-ui/core\";\n\nimport axios from \"../../axios\";\nimport { actionTypes } from \"../../reducer\";\nimport { useStateValue } from \"../../StateProvider\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nconst Detailsbar = () => {\n  const [{ user, room, people }, dispatch] = useStateValue();\n  const [roomUsers, setRoomUsers] = useState([]);\n  const { roomId } = useParams();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  // const [roomUserName, setRoomUserName] = useState([]);\n\n  useEffect(() => {\n    const room_data = room.filter((room) => {\n      return room._id === roomId;\n    })[0];\n    setRoomUsers(room_data?.users);\n    setRoomName(room_data?.name);\n    // setRoomUserName(r)\n  }, [roomId, room, people]);\n\n  useEffect(() => {\n    if (user.photoURL == null) {\n      setSeed(Math.floor(Math.random() * 5000));\n    }\n  }, []);\n\n  const onSubmit = async () => {\n    if (inputValue) {\n      await axios\n        .post(`/rooms/${roomId}`, {\n          user: inputValue,\n          room: roomName,\n        })\n        .then((res) => console.log(res))\n        .catch((err) => console.log(err));\n    }\n\n    setInputValue(\"\");\n    console.log(inputValue);\n  };\n\n  return (\n    <div className=\"details\">\n      <div className=\"details__header\">\n        <h2>People</h2>\n\n        <UserModal\n          inputValue={inputValue}\n          setInputValue={setInputValue}\n          onSubmit={onSubmit}\n        />\n      </div>\n      <div className=\"details__body\">\n        {people.map((pep) =>\n          roomUsers.map((user) =>\n            user === pep.email ? (\n              <div className=\"details__people\" key={user}>\n                <Avatar\n                  src={\n                    pep.photoURL\n                      ? pep.photoURL\n                      : `https://avatars.dicebear.com/api/human/${seed}.svg`\n                  }\n                />\n                <span>{pep.name}</span>\n              </div>\n            ) : null\n          )\n        )}\n      </div>\n\n      {/* <Avatar\n        src={\n          user.photoURL\n            ? user.photoURL\n            : `https://avatars.dicebear.com/api/human/${seed}.svg`\n        }\n        /> */}\n      {/* <div className=\"sidebar__headerRight\">\n          <IconButton>\n            <ExitToAppIcon />\n          </IconButton>\n          <IconButton>\n            <ChatIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n      </div>*/}\n      {/* \n      <div className=\"sidebar__search\">\n        <IconButton>\n          <AddIcon />\n        </IconButton>\n        <div className=\"sidebar__searchContainer\">\n          <input placeholder=\"Search or start new chat\" type=\"text\" />\n        </div>\n      </div> */}\n\n      {/* <div className=\"sidebar__chats\"> */}\n      {/* <SidebarChat addNewChat /> */}\n      {/* {room.map((r) => (\n            <SidebarChat key={r._id} id={r._id} name={r.name} />\n          ))} */}\n      {/* </div> */}\n    </div>\n  );\n};\n\nexport default Detailsbar;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Sidebar/GroupModal/GroupModal.js",["114"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { IconButton } from \"@material-ui/core\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst GroupModal = ({ inputValue, setInputValue, onSubmit }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    setOpen(false);\n    onSubmit();\n  };\n\n  return (\n    <div>\n      <IconButton onClick={handleClickOpen} className=\"sidebar__add__button\">\n        <AddCircleIcon />\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add Group</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the name of the Group to create.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Group Name\"\n            type=\"text\"\n            fullWidth\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default GroupModal;\n","/home/nishok/MY/projects/college_project/chatapp_frontend/src/components/Detailsbar/Modal/UserModal.js",["115"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { IconButton } from \"@material-ui/core\";\nimport PersonAddRoundedIcon from \"@material-ui/icons/PersonAddRounded\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst UserModal = ({ inputValue, setInputValue, onSubmit, name }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    setOpen(false);\n    onSubmit();\n  };\n\n  return (\n    <div>\n      <IconButton onClick={handleClickOpen}>\n        <PersonAddRoundedIcon />\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add People</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the Email of the Person to add them to this Group.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default UserModal;\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":23,"column":24,"nodeType":"122","messageId":"123","endLine":23,"endColumn":27},{"ruleId":"120","severity":1,"message":"124","line":24,"column":10,"nodeType":"122","messageId":"123","endLine":24,"endColumn":13},{"ruleId":"120","severity":1,"message":"125","line":24,"column":15,"nodeType":"122","messageId":"123","endLine":24,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":39,"column":6,"nodeType":"128","endLine":39,"endColumn":8,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":97,"column":6,"nodeType":"128","endLine":97,"endColumn":12,"suggestions":"131"},{"ruleId":"120","severity":1,"message":"132","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"133","line":19,"column":10,"nodeType":"122","messageId":"123","endLine":19,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":117,"column":35,"nodeType":"136","messageId":"137","endLine":117,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":125,"column":14,"nodeType":"136","messageId":"137","endLine":125,"endColumn":16},{"ruleId":"120","severity":1,"message":"138","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":16},{"ruleId":"120","severity":1,"message":"132","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":16,"column":12,"nodeType":"122","messageId":"123","endLine":16,"endColumn":15},{"ruleId":"120","severity":1,"message":"139","line":19,"column":9,"nodeType":"122","messageId":"123","endLine":19,"endColumn":16},{"ruleId":"120","severity":1,"message":"140","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":20},{"ruleId":"120","severity":1,"message":"141","line":11,"column":8,"nodeType":"122","messageId":"123","endLine":11,"endColumn":12},{"ruleId":"120","severity":1,"message":"142","line":12,"column":8,"nodeType":"122","messageId":"123","endLine":12,"endColumn":16},{"ruleId":"120","severity":1,"message":"143","line":21,"column":29,"nodeType":"122","messageId":"123","endLine":21,"endColumn":35},{"ruleId":"120","severity":1,"message":"125","line":22,"column":15,"nodeType":"122","messageId":"123","endLine":22,"endColumn":21},{"ruleId":"120","severity":1,"message":"144","line":26,"column":10,"nodeType":"122","messageId":"123","endLine":26,"endColumn":18},{"ruleId":"120","severity":1,"message":"145","line":26,"column":20,"nodeType":"122","messageId":"123","endLine":26,"endColumn":31},{"ruleId":"126","severity":1,"message":"146","line":71,"column":6,"nodeType":"128","endLine":71,"endColumn":8,"suggestions":"147"},{"ruleId":"120","severity":1,"message":"148","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":20},{"ruleId":"120","severity":1,"message":"149","line":5,"column":32,"nodeType":"122","messageId":"123","endLine":5,"endColumn":46},{"ruleId":"120","severity":1,"message":"150","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":54,"column":15,"nodeType":"136","messageId":"153","endLine":54,"endColumn":38},{"ruleId":"126","severity":1,"message":"154","line":107,"column":6,"nodeType":"128","endLine":107,"endColumn":24,"suggestions":"155"},{"ruleId":"134","severity":1,"message":"135","line":125,"column":25,"nodeType":"136","messageId":"137","endLine":125,"endColumn":27},{"ruleId":"126","severity":1,"message":"130","line":134,"column":6,"nodeType":"128","endLine":134,"endColumn":30,"suggestions":"156"},{"ruleId":"120","severity":1,"message":"157","line":10,"column":27,"nodeType":"122","messageId":"123","endLine":10,"endColumn":35},{"ruleId":"126","severity":1,"message":"158","line":34,"column":6,"nodeType":"128","endLine":34,"endColumn":27,"suggestions":"159"},{"ruleId":"120","severity":1,"message":"160","line":4,"column":18,"nodeType":"122","messageId":"123","endLine":4,"endColumn":28},{"ruleId":"120","severity":1,"message":"138","line":9,"column":10,"nodeType":"122","messageId":"123","endLine":9,"endColumn":16},{"ruleId":"120","severity":1,"message":"161","line":12,"column":10,"nodeType":"122","messageId":"123","endLine":12,"endColumn":21},{"ruleId":"120","severity":1,"message":"162","line":14,"column":21,"nodeType":"122","messageId":"123","endLine":14,"endColumn":31},{"ruleId":"120","severity":1,"message":"157","line":17,"column":34,"nodeType":"122","messageId":"123","endLine":17,"endColumn":42},{"ruleId":"126","severity":1,"message":"163","line":38,"column":6,"nodeType":"128","endLine":38,"endColumn":8,"suggestions":"164"},{"ruleId":"120","severity":1,"message":"132","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"132","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'jwt' is assigned a value but never used.","Identifier","unusedVar","'err' is assigned a value but never used.","'setErr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'getUserWithJWT'. Either include them or remove the dependency array.","ArrayExpression",["167"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["168"],"'useEffect' is defined but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'history' is assigned a value but never used.","'MoreVertIcon' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'people' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'jwt', 'signoutInvalid', and 'user'. Either include them or remove the dependency array.",["169"],"'AttachFile' is defined but never used.","'SearchOutlined' is defined but never used.","'firebase' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","React Hook useEffect has missing dependencies: 'dispatch', 'jwt', and 'room'. Either include them or remove the dependency array.",["170"],["171"],"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. If 'setIsSelected' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["172"],"'IconButton' is defined but never used.","'actionTypes' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'user.photoURL'. Either include it or remove the dependency array.",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [dispatch, getUserWithJWT]",{"range":"188","text":"189"},"Update the dependencies array to be: [dispatch, room]",{"range":"190","text":"191"},"Update the dependencies array to be: [dispatch, jwt, signoutInvalid, user]",{"range":"192","text":"193"},"Update the dependencies array to be: [roomId, messages, room, dispatch, jwt]",{"range":"194","text":"195"},"Update the dependencies array to be: [roomId, room, messages, dispatch]",{"range":"196","text":"197"},"Update the dependencies array to be: [roomId, currentRoom, id]",{"range":"198","text":"199"},"Update the dependencies array to be: [user.photoURL]",{"range":"200","text":"201"},[1137,1139],"[dispatch, getUserWithJWT]",[2705,2711],"[dispatch, room]",[2344,2346],"[dispatch, jwt, signoutInvalid, user]",[3413,3431],"[roomId, messages, room, dispatch, jwt]",[4178,4202],"[roomId, room, messages, dispatch]",[1223,1244],"[roomId, currentRoom, id]",[1383,1385],"[user.photoURL]"]